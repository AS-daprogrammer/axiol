@use "../abstracts/variables";

main {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(10, .1fr);
    grid-row-gap: 1.2rem;
    grid-column-gap: 2rem;

    grid-template-areas: 
    "head_text head_text . ."
    ". . . ."
    "logo desc desc desc"
    "logo buttons buttons buttons"
    ". . . ."
    ". features features features"
    ". line line line"
    ". . source ."
    "updates updates servers servers"
    "updates updates servers servers";
}


h1 {
    grid-area: head_text;
    justify-self: center;
    font-size: 2em;
}

.logo {
    grid-area: logo;
    justify-self: flex-end;
    align-self: center;
    width: 12em;
}

.description {
    grid-area: desc;
    padding: 0px 10px;
    & > h2{
        font-size: 2.5em;
    }

}

.buttons {
    grid-area: buttons;
    width: 100%;
}

.features {
    grid-area: features;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 15px;
}

.source {
    grid-area: source;
    display: flex;
    gap: 1rem;
    & > img {
        transition: .4s ease-in-out;
        width: 2rem;
    }
    & > p {
        transition: .4s ease-in-out;
        margin: auto 0;
    }
    &:hover > img {
        transform: rotate(-360deg);
    }
    &:hover > p {
        transform: translate(10px);

    }
}

.updates { 
    grid-area: updates;
    justify-self: center;
    align-self: center;
    width: 100%;
    cursor: default;
    & > h2{
        margin-left: 5vw;
        margin-bottom: 20px;
    }

    & > .items {
        height: 100%;
        overflow-y: hidden;
        
        & > .update{
            margin-left: 8vw;
            & > h3 {
                margin-top: 1.2em;
                padding: 0px 10px;
                color: variables.$light_main;
            }
            
            & > .pointer {
                position: absolute;
                margin-left: -3vw;
                border-top: .5rem solid transparent;
                border-bottom: .5rem solid transparent;
                border-left: 1rem solid variables.$main;
            }
        }

        & > .update{
            & > *{
                transition: .3s ease;
            }
            &:hover {
                & > .pointer{
                    border-left: 1rem solid variables.$lightest_main;
                }
                & > h3{
                    color: variables.$lightest_main;
                }
            }
        }

    }
}

.servers { 
    grid-area: servers;
    justify-self: flex-end;
    width: 50%;
}


@media only screen and (max-width: 1000px) {
    
    .logo {
        align-self: flex-start;
        margin-left: 50px;
    }
}

@media only screen and (max-width: 700px) {
    h1, .description {
        justify-self: center;
        grid-column: 1/6;
        text-align: center;
    }
    
    .logo {
        justify-self: flex-end;
        margin: 0;
        grid-row: 2;
        grid-column: 3;

    }

    .buttons {
        grid-column: 2/5;
        justify-content: center;
    }

    .servers { 
        grid-column: 1/6;
        justify-self: center;
        margin-left: 30px;
    }
    .updates {
        grid-row: 15/20;
        grid-column: 1/6;
        justify-self: center;
    }
}
